<template>
    {% import PageContent from '../../../PageContent.sht' %}
    {% import ErrorsPanel from '../../../ErrorsPanel.sht' %}
    {% import ChainForm from '../ChainForm.sfc' %}
    {% import BreadCrumb from '../../../BreadCrumb.sfc' %}


    <PageContent dataLoaded={{dataLoaded}}>
        {% breadcrumbs %}
            <BreadCrumb
                project={{project}}
                currentPage="Create project chain"
            />
        {% end breadcrumbs %}
        {% content %}
            <ErrorsPanel errors={{errors}}/>
            <ChainForm
                saveButtonText="Create"
                dataSaving={{dataSaving}}
                onSubmit={{this$.createProjectChain}}
            />
        {% end content %}
    </PageContent>
</template>

<script>
    import LoadProjectMixin from '../../../../mixins/load-project';

    function ChainCreatePage( options ) {
        const errors = $();
        const dataSaving = $();
        const project = $();

        const state = options( {
            [ errors ]: [],
            [ dataSaving ]: false
        } );

        this$.createProjectChain = ( formData ) => {
            const data = {
                ...formData,
                projectId: state[ project ].id
            };
            state( {
                [ dataSaving ]: true,
                [ errors ]: []
            } );
            this.ctx.DI.resolve( 'store' ).createProjectChain( data ).then(
                () => this.ctx.DI.resolve( 'router' ).navigateToRoute(
                    'project-detail',
                    { id: state[ project ].id }
                ),
                () => state( {
                    [ errors ]: [ 'Create project fail!' ],
                    [ dataSaving ]: false
                } )
            );
        };
    }

    export default Component( Template, LoadProjectMixin, ChainCreatePage );
</script>
